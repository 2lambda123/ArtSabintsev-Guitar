{"Structs/Guitar/Chord.html#/s:FOV6Guitar6Guitar5Chord5emailFMS1_S1_":{"name":"email","abstract":"<p>Pattern matches email addresses.</p>","parent_name":"Chord"},"Structs/Guitar/Chord.html#/s:FOV6Guitar6Guitar5Chord14firstCharacterFMS1_S1_":{"name":"firstCharacter","abstract":"<p>Pattern matches first alphanumeric character of each word.</p>","parent_name":"Chord"},"Structs/Guitar/Chord.html#/s:FOV6Guitar6Guitar5Chord13lastCharacterFMS1_S1_":{"name":"lastCharacter","abstract":"<p>Pattern matches last alphanumeric character of each word.</p>","parent_name":"Chord"},"Structs/Guitar/Chord.html#/s:FOV6Guitar6Guitar5Chord15nonAlphanumericFMS1_S1_":{"name":"nonAlphanumeric","abstract":"<p>Pattern matches non-Alphanumeric characters.</p>","parent_name":"Chord"},"Structs/Guitar/Chord.html#/s:FOV6Guitar6Guitar5Chord20nonAlphanumericSpaceFMS1_S1_":{"name":"nonAlphanumericSpace","abstract":"<p>Pattern matches non-Alphanumeric and non-Whitespace characters.</p>","parent_name":"Chord"},"Structs/Guitar.html#/s:FV6Guitar6GuitarcFT_S0_":{"name":"init()","abstract":"<p><code>fatalError</code> occurs when using this empty initializer as Guitar must be initialized using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Guitar.html#/s:FV6Guitar6GuitarcFT7patternSS_S0_\">init(pattern:)</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Guitar.html#/s:FV6Guitar6GuitarcFT5chordOS0_5Chord_S0_\">init(chord:)</a></code>.</p>","parent_name":"Guitar"},"Structs/Guitar.html#/s:FV6Guitar6GuitarcFT7patternSS_S0_":{"name":"init(pattern:)","abstract":"<p>Designated Initializer for <code>Guitar</code></p>","parent_name":"Guitar"},"Structs/Guitar.html#/s:FV6Guitar6GuitarcFT5chordOS0_5Chord_S0_":{"name":"init(chord:)","abstract":"<p>Delegating Initializer for <code>Guitar</code></p>","parent_name":"Guitar"},"Structs/Guitar.html#/s:FV6Guitar6Guitar17evaluateForRangesFT4fromSS4withVCSo19NSRegularExpression7Options_GSaGVs5RangeVVSS13CharacterView5Index__":{"name":"evaluateForRanges(from:with:)","abstract":"<p>Evaluates a string for all instances of a regular expression pattern and returns a list of matched ranges for that string.</p>","parent_name":"Guitar"},"Structs/Guitar.html#/s:FV6Guitar6Guitar18evaluateForStringsFT4fromSS4withVCSo19NSRegularExpression7Options_GSaSS_":{"name":"evaluateForStrings(from:with:)","abstract":"<p>Evaluates a string for all instances of a regular expression pattern and returns a list of matched strings for that string.</p>","parent_name":"Guitar"},"Structs/Guitar.html#/s:FV6Guitar6Guitar4testFT6stringSS4withVCSo19NSRegularExpression7Options_Sb":{"name":"test(string:with:)","abstract":"<p>Tests a string to see if it matches the regular expression pattern.</p>","parent_name":"Guitar"},"Structs/Guitar/Chord.html":{"name":"Chord","abstract":"<p>Common Regular Expression Patterns</p>","parent_name":"Guitar"},"Structs/Guitar.html#/s:ZFV6Guitar6Guitar24firstCharacterOfEachWordFT2inSS_GSaSS_":{"name":"firstCharacterOfEachWord(in:)","abstract":"<p>Returns an array containing the first letter of each word in the test string.</p>","parent_name":"Guitar"},"Structs/Guitar.html#/s:ZFV6Guitar6Guitar23lastCharacterOfEachWordFT2inSS_GSaSS_":{"name":"lastCharacterOfEachWord(in:)","abstract":"<p>Returns an array containing the last letter of each word in the test string.</p>","parent_name":"Guitar"},"Structs/Guitar.html#/s:ZFV6Guitar6Guitar12isValidEmailFT5emailSS_Sb":{"name":"isValidEmail(email:)","abstract":"<p>Tests a string to check if it is a valid email address by using a regular expression.</p>","parent_name":"Guitar"},"Structs/Guitar.html#/s:ZFV6Guitar6Guitar7sanitzeFT6stringSS_SS":{"name":"sanitze(string:)","abstract":"<p>Sanitizes of a string by removing all non-Alphanumeric characters (excluding whitespaces)</p>","parent_name":"Guitar"},"Structs/Guitar.html":{"name":"Guitar","abstract":"Undocumented"},"Extensions/String.html#/s:FE6GuitarSS7isAlphaFT_Sb":{"name":"isAlpha()","abstract":"<p>A Boolean value indicating if all the characters are letters.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS14isAlphanumericFT_Sb":{"name":"isAlphanumeric()","abstract":"<p>A Boolean value indicating if all the characters are alphanumeric.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS13isCapitalizedFT_Sb":{"name":"isCapitalized()","abstract":"<p>A Boolean value indicating if the first characters in all of the words in the string are uppercased.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS15isDecapitalizedFT_Sb":{"name":"isDecapitalized()","abstract":"<p>A Boolean value indicating if the first characters in all of the words in the string are lowercased.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS12isLowercasedFT_Sb":{"name":"isLowercased()","abstract":"<p>A Boolean value indicating if all the characters are lowercased.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS9isNumericFT_Sb":{"name":"isNumeric()","abstract":"<p>A Boolean value indicating if all the characters are numbers.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS12isUppercasedFT_Sb":{"name":"isUppercased()","abstract":"<p>A Boolean value indicating if all the characters are uppercased.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS10camelCasedFT_SS":{"name":"camelCased()","abstract":"<p>Returns a camel cased version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS11capitalizedFT_SS":{"name":"capitalized()","abstract":"<p>Returns a capitalized version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS13decapitalizedFT_SS":{"name":"decapitalized()","abstract":"<p>Returns a decapitalized version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS10kebabCasedFT_SS":{"name":"kebabCased()","abstract":"<p>Returns the kebab cased (a.k.a. slug) version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS11pascalCasedFT_SS":{"name":"pascalCased()","abstract":"<p>Returns a pascal cased version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS10snakeCasedFT_SS":{"name":"snakeCased()","abstract":"<p>Returns the snake cased version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS16splitWordsByCaseFT_SS":{"name":"splitWordsByCase()","abstract":"<p>Splits a string into mutliple words, delimited by uppercase letters.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS9swapCasedFT_SS":{"name":"swapCased()","abstract":"<p>Returns the swap cased version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS5firstFT_SS":{"name":"first()","abstract":"<p>Returns the first character of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS4lastFT_SS":{"name":"last()","abstract":"<p>Returns the last character of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS9latinizedFT_SS":{"name":"latinized()","abstract":"<p>Returns the latinized version of the string without diacritics.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS6lengthFT_Si":{"name":"length()","abstract":"<p>Returns the character count of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS8reversedFT_SS":{"name":"reversed()","abstract":"<p>Retuns the reversed version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS14withoutAccentsFT_SS":{"name":"withoutAccents()","abstract":"<p>Returns the string without diacritics.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS3padFT6lengthSi9withTokenSS_SS":{"name":"pad(length:withToken:)","abstract":"<p>Returns the center-padded version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS7padLeftFT6lengthSi9withTokenSS_SS":{"name":"padLeft(length:withToken:)","abstract":"<p>Returns the left-padded version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS8padRightFT6lengthSi9withTokenSS_SS":{"name":"padRight(length:withToken:)","abstract":"<p>Returns the right-padded version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS8trimLeftFT9byKeepingSi_SS":{"name":"trimLeft(byKeeping:)","abstract":"<p>Returns a prefixed version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS9trimRightFT9byKeepingSi_SS":{"name":"trimRight(byKeeping:)","abstract":"<p>Returns a suffixed version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS8trimLeftFT10byRemovingSi_SS":{"name":"trimLeft(byRemoving:)","abstract":"<p>Returns the left-trimmed version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS9trimRightFT10byRemovingSi_SS":{"name":"trimRight(byRemoving:)","abstract":"<p>Returns the right-trimmed version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:FE6GuitarSS9truncatedFT6lengthSi_SS":{"name":"truncated(length:)","abstract":"<p>Returns the truncated string with an ellipsis.</p>","parent_name":"String"},"Extensions/String.html":{"name":"String"},"Extensions.html":{"name":"Extensions","abstract":"The following extensions are available globally."},"Structs.html":{"name":"Structs","abstract":"The following structs are available globally."}}